/** *	@workflow SecureSalt *	@desc Applies XOR Cipher to data using key and returns base64 encoded * *	@param data object [memory] optional default '' *	@param decode boolean [memory] optional default false *	@param key string [memory] optional default VaultGuard.core.constant.accesskey * *	@return result string [memory] * *	@author Vibhaj Rajan <vibhaj8@gmail.com> ***/VaultGuard.core.workflow.SecureSalt = {	input : function(){		return {			optional : { 				data : '', 				decode : false,				key : VaultGuard.core.constant.accesskey			}		};	},		run : function($memory){		var $workflow;				if($memory['decode']){			$workflow = [{				service: VaultGuard.core.service.Base64Decode,				output: { result : 'data' }			},{				service: VaultGuard.core.service.HexDecode,				input: { data: 'key' },				output: { result : 'key' }			},{				service: VaultGuard.core.service.SecureSalt			}];		}		else {			$workflow = [{				service: VaultGuard.core.service.SecureSalt			},{				service: VaultGuard.core.service.HexDecode,				input: { data: 'key' },				output: { result : 'key' }			},{				service: VaultGuard.core.service.Base64Encode,				input : { data : 'result' }			}];		}				return Snowblozm.Kernel.execute($workflow, $memory);	},		output : function(){		return ['result'];	}};